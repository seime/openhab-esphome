<?xml version="1.0" encoding="UTF-8"?>
<thing:thing-descriptions bindingId="esphome"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:thing="https://openhab.org/schemas/thing-description/v1.0.0"
	xsi:schemaLocation="https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd">

	<!-- Sample Thing Type -->
	<thing-type id="device">

		<label>ESPHome Device</label>
		<description>ESP32 / ESP8266 device flashed with ESPHome. See esphome.io</description>
		<representation-property>hostname</representation-property>

		<config-description>
			<parameter name="hostname" type="text" required="true">
				<context>network-address</context>
				<label>Hostname</label>
				<description>Hostname or IP address of the device</description>
			</parameter>
			<parameter name="port" type="integer" min="1" max="65500" required="false">
				<context>network-address</context>
				<label>Port</label>
				<default>6053</default>
				<description>IP Port address of the device</description>
			</parameter>

			<parameter name="encryptionKey" type="text" required="false">
				<context>password</context>
				<label>Base64 encoded encryption key for encrypted devices</label>
				<description>Specified in the api: -> encryption: -> key: section of the esphome device config. See
					https://esphome.io/components/api#configuration-variables</description>
			</parameter>
			<parameter name="password" type="text" required="false">
				<context>password</context>
				<label>DEPRECATED: Password for insecure, plaintext connection</label>
				<description>DEPRECATED: Password to access the device. Instead, use encryptionKey for secured communications.</description>
			</parameter>

			<parameter name="server" type="text" required="false">
				<label>ESPHome device server name</label>
				<description>Used to verify that we're talking to the correct device</description>
			</parameter>

			<parameter name="pingInterval" type="integer" min="1" max="600" required="false">
				<label>Ping interval in seconds</label>
				<default>10</default>
				<description>Seconds between sending ping requests to device to check if alive</description>
				<advanced>true</advanced>
			</parameter>
			<parameter name="maxPingTimeouts" type="integer" min="1" max="600" required="false">
				<label>Number of missed ping requests before deeming device unresponsive</label>
				<default>4</default>
				<description>Ie if pingInterval=10 and this value is 4, the binding will wait a total of 10*4 = 40 seconds before
					connection is assumed broken, and reconnect starts</description>
				<advanced>true</advanced>
			</parameter>
			<parameter name="logPrefix" type="text" required="false">
				<label>Prefix to use in logging for this particular device. Defaults to Thing ID</label>
				<description>Useful when debugging communication with a particular device (and you have many)</description>
				<advanced>true</advanced>
			</parameter>
			<parameter name="deviceLogLevel" type="text" required="false">
				<label>Stream device logs with at least this log level</label>
				<description>Ensure that your ESPHome YAML config logs at the appropriate level, ie if the device logs at WARN only
					warn or higher logs may be shipped to openHAB even if you specify INFO here. Log statements are logged to the
					'ESPHOMEDEVICE' logger at level INFO. Adjust your log4j.xml config file to redirect device logs to ie a sepearate
					file.</description>
				<options>
					<option value="NONE">NONE</option>
					<option value="ERROR">ERROR</option>
					<option value="WARN">WARN</option>
					<option value="INFO">INFO</option>
					<option value="CONFIG">CONFIG</option>
					<option value="DEBUG">DEBUG</option>
					<option value="VERBOSE">VERBOSE</option>
					<option value="VERY_VERBOSE">VERY_VERBOSE</option>
				</options>
				<default>NONE</default>
				<advanced>true</advanced>
			</parameter>

		</config-description>
	</thing-type>

	<bridge-type id="bluetooth-proxy">
		<label>Bluetooth proxy</label>
		<description>ESPHome Bluetooth Proxy for beacons. Utilizes any registered ESPHome device with bluetooth proxy enabled</description>
	</bridge-type>

	<!-- Sample Channel Type -->

</thing:thing-descriptions>
